name: CI Pytest
on:
  pull_request:
    branches: [ main, dev ]

jobs:
  pytest:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.9]
        
    steps:
    ### Setup prerequisites
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Checkout repo
      uses: actions/checkout@v3

    ### Caching
    - name: Overwrite version number from pyproject.toml, so it doesn't invalidate cache
      id: remove-version-from-toml
      if: matrix.os == 'ubuntu-latest'
      run: |
        sed -i "s/version = \".*\"/version = \"0.0.0\"/g" pyproject.toml
        cat pyproject.toml
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2.1.6
      with:
        path: |
          .venv
          poetry.lock
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}
    
    - name: Load cached .local (Poetry install location)
      id: cached-poetry
      if: (matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest')
      uses: actions/cache@v2.1.6
      with:
        path: |
          ~/.local/
        # Cache the complete venv dir for a given os, python version, pyproject.toml
        key: venv-${{ runner.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('.github/workflows/cache_version') }}--${{ hashFiles('.github/workflows/test_prs.yml') }}

    # Installing
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.15
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install Project
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install -vvv
    
    ### Run tests
    - name: Run pytest
      run: |
        poetry run pytest --cov=src --cov-report term-missing --color=yes
